 [
    {
      "name": "AppBar",
      "props": [
        "classes: js.UndefOr[js.Object]",
        "color : String = \"primary\"",
        "position: String = \"fixed\""
      ]
    },
    {
      "name": "Box",
      "wrap": ""
    },
    {
      "name": "Breadcrumbs",
      "props": [
        "`aria-label`: String = \"breadcrumb\"",
        "separator: String = \"/\""
      ]
    },
    {
      "name": "Container",
      "wrap": ""
    },
    {
      "name": "Link",
      "wrap": "a",
      "props": [
        "color: String = \"inherit\""
      ]
    },
    {
      "name": "Button",
      "wrap": "a",
      "props": [
        "color : String = \"primary\"",
        "disabled: Boolean = false",
        "onClick: SyntheticEvent[html.Input, Event] => Unit"
      ],
      "docLines": [
        "<span class=\"seoSummary\">The <strong>HTML <code>&lt;a&gt;</code> element</strong> (or <em>anchor</em> element) creates a hyperlink to other web pages, files, locations within the same page, email addresses, or any other URL.</span>"
      ]
    },
    {
      "name": "ButtonBase",
      "props":[
        "className: js.UndefOr[String] = js.undefined"
      ]
    },
    {
      "name": "CircularProgress",
      "props": [
        "color: String = \"primary\""
      ],
      "docLines": [
        "<span class=\"seoSummary\">The <strong>HTML <code>&lt;a&gt;</code> element</strong> (or <em>anchor</em> element) creates a hyperlink to other web pages, files, locations within the same page, email addresses, or any other URL.</span>"
      ]
    },
    {
      "name": "Dialog",
      "props":[
        "open: Boolean",
        "disableBackdropClick: Boolean = false",
        "disableEscapeKeyDown: Boolean = false",
        "fullScreen: Boolean = false",
        "fullWidth: Boolean = false",
        "maxWidth: MaxWidth = MaxWidth.sm"
      ]
    },
    {"name": "DialogContent"},
    {"name": "DialogContentText"},
    {
     "name": "DialogTitle",
     "props":["id: String"]  
    },
    {
      "name": "FormControl",
      "props": [
        "className: js.UndefOr[String] = js.undefined",
        "component: js.UndefOr[String | js.Function] = js.undefined",
        "disabled: js.UndefOr[Boolean] = js.undefined",
        "error: js.UndefOr[Boolean] = js.undefined",
        "fullWidth: js.UndefOr[Boolean] = js.undefined",
        "margin: js.UndefOr[Margin] = js.undefined",
        "required: js.UndefOr[Boolean] = js.undefined"
      ]
    },
    {
      "name": "FormGroup"
    },
    {
      "name": "FormControlLabel",
      "props":[
        "control: ReactElement",
        "label: String = \"\""
      ]
    },
    {
      "name": "Grid",
      "imports": ["Size.orBooleanWriter"],
      "splitted": [
        {
         "name":"Grid",
          "props": [
            "container: Boolean = true",
            "item: Boolean = true",
            "zeroMinWidth: UndefOr[Boolean] = js.undefined",
            "justify: UndefOr[Align.Justify] = js.undefined",
            "alignContent: UndefOr[Align.Content] = js.undefined",
            "alignItems: UndefOr[Align.Items] = js.undefined",
            "direction: UndefOr[String] = js.undefined",
            "wrap: UndefOr[Wrap] = js.undefined",
            "spacing: UndefOr[Int] = js.undefined",
            "lg: UndefOr[Size.orBoolean] = js.undefined",
            "md: UndefOr[Size.orBoolean] = js.undefined",
            "sm: UndefOr[Size.orBoolean] = js.undefined",
            "xl: UndefOr[Size.orBoolean] = js.undefined",
            "xs: UndefOr[Size.orBoolean] = js.undefined"
          ]
        },
        {
          "name": "GridContainer",
          "props":[
             "container: Boolean = true",
             "item: Boolean = false",
             "zeroMinWidth: UndefOr[Boolean] = js.undefined",
             "justify: UndefOr[Align.Justify] = js.undefined",
             "alignContent: UndefOr[Align.Content] = js.undefined",
             "alignItems: UndefOr[Align.Items] = js.undefined",
             "direction: UndefOr[String] = js.undefined",
             "wrap: UndefOr[Wrap] = js.undefined",
             "spacing: UndefOr[Int] = js.undefined"                    
          ]
        },
        {
          "name":"GridItem",
          "props":[
            "item: Boolean = true",
            "container: Boolean = false",
            "lg: UndefOr[Size.orBoolean] = js.undefined",
            "md: UndefOr[Size.orBoolean] = js.undefined",
            "sm: UndefOr[Size.orBoolean] = js.undefined",
            "xl: UndefOr[Size.orBoolean] = js.undefined",
            "xs: UndefOr[Size.orBoolean] = js.undefined"
          ]
        }
      ],
      "props": [
        "key: String = \"\"",
        "classes: js.UndefOr[js.Object] = js.undefined",
        "component: String = \"div\""
      ]
    },
    {
      "name": "GridList",
      "imports":["Auto._"],
      "props": [
        "cols: Int = 2",
        "spacing: Int = 4",
        "cellHeight: UndefOr[Int | auto.type] = 180"
      ]
    },
    {
      "name": "GridListTile",
      "props": [
        "key: String",
        "cols: Int = 1",
        "rows: Int = 1",
        "component: UndefOr[String | js.Function] = js.undefined"
      ]
    },
    {
      "name": "GridListTileBar",
      "imports": [
        "slinky.materialui.core.Positions.TitlePosition"
      ],
      "props": [
        "subtitle: String = \"\"",
        "title: String = \"\"",
        "actionPosition: String = \"right\"",
        "titlePosition: TitlePosition = Positions.bottom"
      ]
    },
    {
      "name": "Icon",
      "props": [
        "color: String = \"inherit\"",
        "component: String = \"span\"",
        "fontSize: String = \"default\""
      ]
    },
    {
      "name": "IconButton",
      "props": [
        "`aria-label`: String",
        "color: String = \"default\"",
        "disabled: Boolean = false",
        "disableFocusRipple: Boolean = false",
        "disableRipple: Boolean = false",
        "edge: String = \"false\"",
        "size: String = \"medium\""
      ]
    },
    {
      "name":"Input",
      "props":[
        "`type`: String = \"text\""
      ]
    },
    {
      "name": "SvgIcon",
      "props": [
        "color: String = \"inherit\"",
        "component: String = \"svg\"",
        "fontSize: String = \"default\"",
        "htmlColor: String = \"\"",
        "shapeRendering: String = \"\"",
        "titleAccess: String = \"\"",
        "viewBox: String = \"0 0 24 24\""
      ]
    },
    {
      "name": "Switch",
      "wrap": "a",
      "props":[
        "checked: Boolean",
        "name: String",
        "onChange: SyntheticEvent[html.Input, Event] => Unit"
      ]
    },
    {
      "name":"TextField",
      "props":[
        "id: String",
        "required: Boolean = true",
        "fullWidth: Boolean = false",
        "multiline: Boolean = false",
        "rowsMax: Int = 4",
        "label: String = \"\"",
        "defaultValue: String = \"\"",
        "helperText: String = \"\"",
        "onChange: SyntheticEvent[html.Input, Event] => Unit"
      ]
    }
  ]
